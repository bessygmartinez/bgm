{"version":3,"sources":["components/Skills/drop.svg","components/Skills/cloud1.svg","sun.svg","components/Nav/index.js","components/Words/index.js","components/AboutMe/index.js","components/Skills/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","handleToggle","bar","$","head","navitems","navbg","navwrap","toggleClass","className","onClick","this","React","Component","Words","AboutMe","Skills","src","cloud1","alt","drop","App","onScriptLoad","window","startWords","sun","maxScrollDistance","pixelsPerScroll","imgWidth","Math","min","height","scroll","scrollTopPos","document","scrollTop","zoomedWidth","floor","css","sunSize","ready","each","i","bottom_of_object","offset","top","outerHeight","animate","id","width","Boolean","location","hostname","match","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message"],"mappings":"6EAAAA,EAAOC,QAAU,IAA0B,kC,iBCA3CD,EAAOC,QAAU,IAA0B,oC,qBCA3CD,EAAOC,QAAU,IAA0B,iC,yQC4C5BC,G,kNAvCbC,aAAe,WACb,IAAMC,EAAMC,IAAE,QACRC,EAAOD,IAAE,SACTE,EAAWF,IAAE,cACbG,EAAQH,IAAE,WACVI,EAAUJ,IAAE,aAElBA,IAAED,GAAKM,YAAY,UACnBL,IAAEC,GAAMI,YAAY,UACpBL,IAAEE,GAAUG,YAAY,UACxBL,IAAEG,GAAOE,YAAY,UACrBL,IAAEI,GAASC,YAAY,W,uDAIvB,OACE,yBAAKC,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,WACX,wCACA,yCAEJ,yBAAKA,UAAU,WACX,uCACA,+CAGR,yBAAKA,UAAU,WACf,yBAAKA,UAAU,aACjB,yBAAKA,UAAU,UAAUC,QAASC,KAAKV,cACrC,yBAAKQ,UAAU,cACf,yBAAKA,UAAU,eACf,yBAAKA,UAAU,oB,GAjCPG,IAAMC,YCUTC,MAZf,WACI,OACI,wBAAIL,UAAU,4BACd,0BAAMA,UAAU,QAAhB,uBACA,0BAAMA,UAAU,QAAhB,0BACA,0BAAMA,UAAU,QAAhB,eACA,0BAAMA,UAAU,QAAhB,iBACA,0BAAMA,UAAU,QAAhB,e,MCMOM,MAZf,WACI,OACI,yBAAKN,UAAU,sCACP,8CACA,6W,wCCkEDO,MApEf,WACI,OACI,6BAEA,yBAAKP,UAAU,YACX,yBAAKA,UAAU,gCACX,yBAAKQ,IAAKC,IAAQC,IAAI,QAAQV,UAAU,oBAE5C,wBAAIA,UAAU,WAAd,YAGA,uBAAGA,UAAU,WAAb,sLAMJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gCACX,yBAAKQ,IAAKC,IAAQC,IAAI,QAAQV,UAAU,+BAE5C,wBAAIA,UAAU,oBAAd,aAGA,uBAAGA,UAAU,WAAb,sSAOJ,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gCACX,yBAAKQ,IAAKC,IAAQC,IAAI,QAAQV,UAAU,oBAE5C,wBAAIA,UAAU,oBAAd,iBAGA,uBAAGA,UAAU,WAAb,iGAKJ,yBAAKA,UAAU,wBAEH,yBAAKA,UAAU,sBACf,yBAAKQ,IAAKC,IAAQC,IAAI,aAAaV,UAAU,8BAGjD,yBAAKA,UAAU,sDAC3B,yBAAKA,UAAU,iCACf,yBAAKA,UAAU,6BACH,yBAAKQ,IAAKG,IAAMD,IAAI,OAAOV,UAAU,wBACrC,yBAAKQ,IAAKG,IAAMD,IAAI,OAAOV,UAAU,wBACrC,yBAAKQ,IAAKG,IAAMD,IAAI,OAAOV,UAAU,wBACrC,yBAAKQ,IAAKG,IAAMD,IAAI,OAAOV,UAAU,wBACrC,yBAAKQ,IAAKG,IAAMD,IAAI,OAAOV,UAAU,wBACrC,yBAAKQ,IAAKG,IAAMD,IAAI,OAAOV,UAAU,8B,iBC6DtCY,G,kNApGbC,aAAe,WACbC,OAAOC,c,kEAZPb,KAAKW,iB,+BA8EP,OA5DgB,WAECnB,IAAE,QAERc,IAAMQ,IACb,IAGIC,EAAoB,IAUpBC,EADYC,KANhBF,EAAoBG,KAAKC,IAAIJ,EAAmBvB,IAAEoB,QAAQQ,WAS1D5B,IAAEoB,QAAQS,QAAO,WAEb,IAAIC,EAAeJ,KAAKC,IAAI3B,IAAE+B,UAAUC,YAAaT,GAMjDU,EAvBO,IAoBWP,KAAKQ,MAAMJ,EAAeN,GAMhDxB,IAAE,QAAQmC,IAAI,QAASF,MAI/BG,GAEApC,IAAE+B,UAAUM,OAAM,WAGdrC,IAAEoB,QAAQS,QAAQ,WAGd7B,IAAE,YAAYsC,MAAM,SAASC,GAEzB,IAAIC,EAAmBxC,IAAEQ,MAAMiC,SAASC,IAAM1C,IAAEQ,MAAMmC,aAAY,GAC3C3C,IAAEoB,QAAQY,YAAchC,IAAEoB,QAAQQ,SAGlCY,EAAmB,KAEtCxC,IAAEQ,MAAMoC,QAAQ,CAAC,QAAU,KAAM,cAU/C,6BAEE,kBAAC,EAAD,MAEA,yBAAKtC,UAAU,aACb,yBAAKA,UAAU,QACf,yBAAKA,UAAU,4BACb,yBAAKQ,IAAKQ,IAAKN,IAAI,MAAMV,UAAU,MAAMuC,GAAG,MAAMC,MAAM,UAG1D,yBAAKxC,UAAU,6BACf,kBAAC,EAAD,OAGA,yBAAKA,UAAU,0BAAyB,uBAAGA,UAAU,wBAAb,oBAGxC,yBAAKA,UAAU,YACb,kBAAC,EAAD,OAGF,yBAAKA,UAAU,UACb,kBAAC,EAAD,a,GAxGQI,cCGEqC,QACW,cAA7B3B,OAAO4B,SAASC,UAEe,UAA7B7B,OAAO4B,SAASC,UAEhB7B,OAAO4B,SAASC,SAASC,MACvB,2D,YCXNC,IAASC,OAAO,kBAAC,IAAD,CAAQC,SAAUC,QAAwB,kBAAE,EAAF,OAAmBvB,SAASwB,eAAe,SD4H/F,kBAAmBC,WACrBA,UAAUC,cAAcpB,MACrBqB,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.29f19ad6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drop.8b9d3376.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud1.cd06f237.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.8f2bf00f.svg\";","import React from \"react\";\r\nimport $ from \"jquery\";\r\nimport \"./nav.css\";\r\n\r\nclass Nav extends React.Component {\r\n  handleToggle = () => {\r\n    const bar = $(\".bar\");\r\n    const head = $(\".head\");\r\n    const navitems = $(\".nav-items\");\r\n    const navbg = $(\".nav-bg\");\r\n    const navwrap = $(\".nav-wrap\");\r\n\r\n    $(bar).toggleClass(\"active\");\r\n    $(head).toggleClass(\"active\");\r\n    $(navitems).toggleClass(\"active\");\r\n    $(navbg).toggleClass(\"active\");\r\n    $(navwrap).toggleClass(\"active\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"head\">\r\n          <div className=\"nav-items\">\r\n              <div className=\"nav-col\">\r\n                  <h2>About Me</h2>\r\n                  <p>Who am I?</p>\r\n              </div>\r\n              <div className=\"nav-col\">\r\n                  <h2>My Work</h2>\r\n                  <p>Here's my work</p>\r\n              </div>\r\n          </div>\r\n          <div className=\"nav-bg\"></div>\r\n          <div className=\"nav-wrap\"></div>\r\n        <div className=\"nav-div\" onClick={this.handleToggle}>\r\n          <div className=\"bar first\"></div>\r\n          <div className=\"bar second\"></div>\r\n          <div className=\"bar third\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nfunction Words() {\r\n    return (\r\n        <h1 className=\"center-align greeny-text\">\r\n        <span className=\"word\">Web &nbsp; Developer.</span>\r\n        <span className=\"word\">Graphic &nbsp; Designer.</span>\r\n        <span className=\"word\">Miami-Born.</span>\r\n        <span className=\"word\">Miami-Raised.</span>\r\n        <span className=\"word\">Optimist.</span>\r\n      </h1>\r\n    )\r\n}\r\n\r\nexport default Words;","import React from \"react\";\r\nimport \"./aboutme.css\";\r\n\r\nfunction AboutMe() {\r\n    return (\r\n        <div className=\"about-me-text hide-me center-align\">\r\n                <h2>Hi, I'm Bessy!</h2>\r\n                <p> I'm from Miami, FL, but I design and build in the digital world, having earned a\r\n                    full stack web development certification from the University of Miami and a degree in\r\n                    Graphic/Commercial Design from Miami-Dade College. I'm fascinated by the connection between\r\n                    UX and UI design, and my work as a developer is continuously expanding. </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutMe;","import React from \"react\";\r\nimport \"./skills.css\";\r\nimport cloud1 from \"./cloud1.svg\";\r\nimport drop from \"./drop.svg\";\r\n\r\nfunction Skills() {\r\n    return (\r\n        <div>\r\n\r\n        <div className=\"designer\">\r\n            <div className=\"cloud1-svg hide-me vibrate-3\">\r\n                <img src={cloud1} alt=\"cloud\" className=\"cloud1 hide-me\"></img>\r\n            </div>\r\n            <h3 className=\"hide-me\">\r\n                Designer\r\n            </h3>\r\n            <p className=\"hide-me\">\r\n               I've been a Freelance Graphic Designer for over 15 years and value clean design models, straighforward\r\n               content format, and meaningful interactions. Being creative fuels my work.\r\n            </p>\r\n        </div>\r\n\r\n        <div className=\"developer\">\r\n            <div className=\"cloud2-svg vibrate-2 hide-me\">\r\n                <img src={cloud1} alt=\"cloud\" className=\"cloud1 flip-cloud hide-me\"></img>\r\n            </div>\r\n            <h3 className=\"clearfix hide-me\">\r\n                Developer\r\n            </h3>\r\n            <p className=\"hide-me\">\r\n                I love to code and watch it come to life in the browser. Some of the languages\r\n                I use and continue to develop are HTML5, CSS3, JavaScript, and SQL. I also work with React, JSX, jQuery,\r\n                Express Handlebars, Node, Express, MySQL, MongoDB, Passport, JWT, and am familiar with GitHub and Heroku.\r\n            </p>\r\n        </div>\r\n\r\n        <div className=\"coffee-addict\">\r\n            <div className=\"cloud3-svg vibrate-3 hide-me\">\r\n                <img src={cloud1} alt=\"cloud\" className=\"cloud1 hide-me\"></img>\r\n            </div>\r\n            <h3 className=\"clearfix hide-me\">\r\n                Coffee Addict\r\n            </h3>\r\n            <p className=\"hide-me\">\r\n                I know I said that creativity fuels my work, but it's actually coffee. Coffee fuels my work.\r\n            </p>\r\n        </div>\r\n\r\n        <div className=\"rain stop-flickering\">\r\n\r\n                    <div className=\"cloud4-svg hide-me\">\r\n                    <img src={cloud1} alt=\"rain cloud\" className=\"cloud2 vibrate-2 hide-me\"></img>\r\n                    </div>\r\n\r\n                <div className=\"ac-animated-svg-icon ac-svg-animated ac-svg-shadow\">\r\n\t\t\t\t<div className=\"ac-animated-svg-icon-contents\">\r\n\t\t\t\t<div className=\"ac-animated-svg-cloudrain\">\r\n                <img src={drop} alt=\"drop\" className=\"svg-drop svg-drop-1\"></img>\r\n                <img src={drop} alt=\"drop\" className=\"svg-drop svg-drop-2\"></img>\r\n                <img src={drop} alt=\"drop\" className=\"svg-drop svg-drop-3\"></img>\r\n                <img src={drop} alt=\"drop\" className=\"svg-drop svg-drop-4\"></img>\r\n                <img src={drop} alt=\"drop\" className=\"svg-drop svg-drop-5\"></img>\r\n                <img src={drop} alt=\"drop\" className=\"svg-drop svg-drop-6\"></img>\r\n\r\n                </div>\r\n                </div>\r\n                </div>\r\n\r\n        </div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Skills;","import React, {Component} from \"react\";\nimport Nav from \"./components/Nav\";\nimport Words from \"./components/Words\";\nimport AboutMe from \"./components/AboutMe\";\nimport Skills from \"./components/Skills\";\nimport sun from \"./sun.svg\"\nimport $ from \"jquery\";\nimport \"./App.css\";\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.onScriptLoad();\n\n  //    let script = document.createElement(\"script\");\n  //   script.async = true;  \n  //   script.src=\"/bgm/assets/js/words.js\";\n    \n    // script.onload = () => this.onScriptLoad();\n\n  //   document.body.append(script);\n  }\n\n  onScriptLoad = () => {\n    window.startWords();\n  }\n\n  render ()\n  {\n\n    let sunSize = function() {\n      // Get the real width of the sun\n      let sunImg = $(\"#sun\");\n      // let newImage = new Image();\n      sunImg.src = sun;\n      let imgWidth = 450;\n      \n      // distance over which zoom effect takes place\n      let maxScrollDistance = 900;\n      \n      // set to window height if larger\n      maxScrollDistance = Math.min(maxScrollDistance, $(window).height());\n      \n      // width at maximum zoom out (i.e. when window has scrolled maxScrollDistance)\n      let widthAtMax = 350;\n      \n      // calculate diff and how many pixels to zoom per pixel scrolled\n      let widthDiff = imgWidth - widthAtMax;\n      let pixelsPerScroll =(widthDiff / maxScrollDistance);\n  \n      $(window).scroll(function () {\n          // the currently scrolled-to position - max-out at maxScrollDistance\n          let scrollTopPos = Math.min($(document).scrollTop(), maxScrollDistance);\n          \n          // how many pixels to adjust by\n          let scrollChangePx =  Math.floor(scrollTopPos * pixelsPerScroll);\n          \n          // calculate the new width\n          let zoomedWidth = imgWidth - scrollChangePx;\n          \n          // set the width\n          $('.sun').css('width', zoomedWidth);\n      });\n  };\n  \n  sunSize();\n\n  $(document).ready(function() {\n      \n      /* Every time the window is scrolled ... */\n      $(window).scroll( function(){\n      \n          /* Check the location of each desired element */\n          $('.hide-me').each( function(i){\n              \n              let bottom_of_object = $(this).offset().top + $(this).outerHeight(false);\n              let bottom_of_window = $(window).scrollTop() + $(window).height();\n              \n              /* If the object is completely visible in the window, fade it */\n              if( bottom_of_window > bottom_of_object - 200){\n                  \n                  $(this).animate({'opacity':'1'}, 350);                        \n              }\n              \n          }); \n      \n      });\n      \n  });\n    \n  return (\n    <div>\n      \n      <Nav />\n\n      <div className=\"container\">\n        <div className=\"hero\">\n        <div className=\"sun-wrap stop-flickering\">\n          <img src={sun} alt=\"sun\" className=\"sun\" id=\"sun\" width=\"100%\"></img>\n          {/* <img src={sun} alt=\"sun\" className=\"sun-mob\" id=\"sun\" width=\"100%\"></img> */}\n        </div>\n        <div className=\"words-div stop-flickering\">\n        <Words />\n          </div>\n        \n        <div className=\"scroll-down bounce-top\"><i className=\"large material-icons\">arrow_downward</i></div>\n        </div>\n          \n        <div className=\"about-me\">\n          <AboutMe />\n        </div>\n\n        <div className=\"skills\">\n          <Skills />\n        </div>\n\n        \n      </div>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}